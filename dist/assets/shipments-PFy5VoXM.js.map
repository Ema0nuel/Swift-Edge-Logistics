{"version":3,"file":"shipments-PFy5VoXM.js","sources":["../../src/script/views/Admin/shipments.js"],"sourcesContent":["import { supabase } from \"../../utils/supabaseClient\";\r\nimport Navbar from \"./components/navbar.js\";\r\nimport { reset } from \"../../utils/reset.js\";\r\nimport dayjs from \"dayjs\";\r\nimport toastr from \"../../utils/toastr\";\r\nimport 'ol/ol.css';\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport OSM from 'ol/source/OSM';\r\nimport { transform, transformExtent } from 'ol/proj'; // <-- FIX: import transformExtent\r\nimport Feature from 'ol/Feature';\r\nimport Point from 'ol/geom/Point';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport VectorSource from 'ol/source/Vector';\r\nimport Style from 'ol/style/Style';\r\nimport Icon from 'ol/style/Icon';\r\nimport LineString from 'ol/geom/LineString';\r\nimport { Stroke } from 'ol/style';\r\n\r\n// --- Geocoding Helper ---\r\nasync function geocodeLocation(locationName) {\r\n    const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(locationName)}`;\r\n    const response = await fetch(url);\r\n    const results = await response.json();\r\n    if (results.length > 0) {\r\n        // Return [lat, lon] as numbers\r\n        return [parseFloat(results[0].lat), parseFloat(results[0].lon)];\r\n    }\r\n    return null;\r\n}\r\n\r\n// --- Spinner ---\r\nfunction showSpinner() {\r\n    if (document.getElementById(\"spinnerOverlay\")) return;\r\n    const spinner = document.createElement(\"div\");\r\n    spinner.id = \"spinnerOverlay\";\r\n    spinner.innerHTML = `\r\n    <div class=\"fixed inset-0 bg-black/40 z-50 flex items-center justify-center\">\r\n      <div class=\"animate-spin rounded-full h-20 w-20 border-t-4 border-b-4 border-blue-500\"></div>\r\n    </div>\r\n  `;\r\n    document.body.appendChild(spinner);\r\n}\r\nfunction hideSpinner() {\r\n    document.getElementById(\"spinnerOverlay\")?.remove();\r\n}\r\n\r\n// --- Data Fetch ---\r\nasync function fetchShipments(status = \"\") {\r\n    let query = supabase\r\n        .from(\"shipments\")\r\n        .select(\"*\")\r\n        .order(\"created_at\", { ascending: false });\r\n    if (status) query = query.eq(\"status\", status);\r\n    const { data, error } = await query;\r\n    if (error) {\r\n        toastr.error(\"Failed to fetch shipments: \" + error.message);\r\n        return [];\r\n    }\r\n    return data || [];\r\n}\r\n\r\nasync function fetchShipmentDetails(id) {\r\n    showSpinner();\r\n    const { data: shipment, error } = await supabase\r\n        .from(\"shipments\")\r\n        .select(\"*\")\r\n        .eq(\"id\", id)\r\n        .single();\r\n    const { data: updates } = await supabase\r\n        .from(\"tracking_updates\")\r\n        .select(\"*\")\r\n        .eq(\"shipment_id\", id)\r\n        .order(\"updated_at\", { ascending: true });\r\n    hideSpinner();\r\n    return { shipment, updates: updates || [] };\r\n}\r\n\r\n// --- CRUD ---\r\nasync function createShipment(form) {\r\n    showSpinner();\r\n    const data = Object.fromEntries(new FormData(form));\r\n    const trackingCode = \"TRK\" + Date.now();\r\n    const { error } = await supabase.from(\"shipments\").insert([{\r\n        sender_id: data.sender_id,\r\n        receiver_name: data.receiver_name,\r\n        receiver_address: data.receiver_address,\r\n        receiver_phone: data.receiver_phone,\r\n        origin: data.origin,\r\n        destination: data.destination,\r\n        package_description: data.package_description,\r\n        weight: Number(data.weight) || null,\r\n        cost: Number(data.cost) || null,\r\n        status: \"processing\",\r\n        tracking_code: trackingCode,\r\n        image_url: data.image_url || \"\",\r\n    }]);\r\n    hideSpinner();\r\n    if (error) {\r\n        toastr.error(error.message || \"Failed to create shipment.\");\r\n        return false;\r\n    }\r\n    toastr.success(\"Shipment created!\");\r\n    return true;\r\n}\r\n\r\nasync function editShipment(form, shipmentId) {\r\n    showSpinner();\r\n    const data = Object.fromEntries(new FormData(form));\r\n    const updateData = {};\r\n    if (data.receiver_name) updateData.receiver_name = data.receiver_name;\r\n    if (data.receiver_address) updateData.receiver_address = data.receiver_address;\r\n    if (data.receiver_phone) updateData.receiver_phone = data.receiver_phone;\r\n    if (data.origin) updateData.origin = data.origin;\r\n    if (data.destination) updateData.destination = data.destination;\r\n    if (data.package_description) updateData.package_description = data.package_description;\r\n    if (data.weight !== \"\") updateData.weight = Number(data.weight);\r\n    if (data.cost !== \"\") updateData.cost = Number(data.cost);\r\n    if (data.image_url) updateData.image_url = data.image_url;\r\n    const { error } = await supabase\r\n        .from(\"shipments\")\r\n        .update(updateData)\r\n        .eq(\"id\", shipmentId);\r\n    hideSpinner();\r\n    if (error) {\r\n        toastr.error(error.message || \"Failed to update shipment.\");\r\n        return false;\r\n    }\r\n    toastr.success(\"Shipment updated!\");\r\n    return true;\r\n}\r\n\r\nasync function addLiveTrackingUpdate(shipmentId, location, status, note) {\r\n    showSpinner();\r\n    await supabase.from(\"tracking_updates\").insert([{\r\n        shipment_id: shipmentId,\r\n        location,\r\n        status,\r\n        note,\r\n    }]);\r\n    hideSpinner();\r\n    toastr.success(\"Live tracking updated!\");\r\n}\r\n\r\n// --- Map Logic (OpenLayers) ---\r\n// Always start from New York warehouse: [40.7127281, -74.0060152]\r\nconst WAREHOUSE_LOCATION = [40.7127281, -74.0060152];\r\n\r\nfunction parseLatLon(location) {\r\n    // Accepts \"lat,lon\" or \"lon,lat\" (try both)\r\n    let [a, b] = location.split(',').map(Number);\r\n    // Always treat as lat,lon (Nominatim returns lat,lon)\r\n    return [a, b];\r\n}\r\n\r\nfunction renderTrackingMap(containerId, updates) {\r\n    // Always start with warehouse location\r\n    const points = [\r\n        WAREHOUSE_LOCATION,\r\n        ...updates\r\n            .map(u => parseLatLon(u.location))\r\n            .filter(([lat, lon]) => !isNaN(lat) && !isNaN(lon))\r\n    ];\r\n\r\n    // Center on last point, or warehouse if only one\r\n    const center = points.length > 1 ? points[points.length - 1] : WAREHOUSE_LOCATION;\r\n    const centerWebMercator = transform([center[1], center[0]], 'EPSG:4326', 'EPSG:3857');\r\n\r\n    document.getElementById(containerId).innerHTML = \"\";\r\n\r\n    const map = new Map({\r\n        target: containerId,\r\n        layers: [\r\n            new TileLayer({ source: new OSM() })\r\n        ],\r\n        view: new View({\r\n            center: centerWebMercator,\r\n            zoom: 10\r\n        })\r\n    });\r\n\r\n    // Draw path\r\n    if (points.length > 1) {\r\n        const lineCoords = points.map(([lat, lon]) => transform([lon, lat], 'EPSG:4326', 'EPSG:3857'));\r\n        const line = new Feature({\r\n            geometry: new LineString(lineCoords)\r\n        });\r\n        line.setStyle(new Style({\r\n            stroke: new Stroke({ color: '#4285f4', width: 3 })\r\n        }));\r\n        const vectorSource = new VectorSource({ features: [line] });\r\n        const vectorLayer = new VectorLayer({ source: vectorSource });\r\n        map.addLayer(vectorLayer);\r\n    }\r\n\r\n    // Draw markers\r\n    points.forEach((pt, idx) => {\r\n        const marker = new Feature({\r\n            geometry: new Point(transform([pt[1], pt[0]], 'EPSG:4326', 'EPSG:3857'))\r\n        });\r\n        marker.setStyle(new Style({\r\n            image: new Icon({\r\n                src: idx === 0\r\n                    ? \"https://cdn-icons-png.flaticon.com/512/684/684908.png\" // warehouse icon\r\n                    : \"https://cdn.jsdelivr.net/npm/ol@v7.4.0/examples/data/icon.png\",\r\n                scale: 0.1,\r\n                anchor: [0.5, 1]\r\n            })\r\n        }));\r\n        const vectorSource = new VectorSource({ features: [marker] });\r\n        const vectorLayer = new VectorLayer({ source: vectorSource });\r\n        map.addLayer(vectorLayer);\r\n    });\r\n\r\n    // Fit map to all points if more than one\r\n    if (points.length > 1) {\r\n        const extent = [\r\n            Math.min(...points.map(pt => pt[1])), // min lon\r\n            Math.min(...points.map(pt => pt[0])), // min lat\r\n            Math.max(...points.map(pt => pt[1])), // max lon\r\n            Math.max(...points.map(pt => pt[0]))  // max lat\r\n        ];\r\n        map.getView().fit(transformExtent(extent, 'EPSG:4326', 'EPSG:3857'), { padding: [40, 40, 40, 40] });\r\n    }\r\n}\r\n\r\n// --- Main UI ---\r\nconst shipments = async () => {\r\n    reset(\"Delivery Management\");\r\n    const { html: navbarHtml, pageEvents: navbarEvents } = Navbar();\r\n\r\n    let shipmentsList = await fetchShipments();\r\n\r\n    function renderMain() {\r\n        const html = `\r\n      <div class=\"min-h-screen bg-gradient-to-br from-gray-900 via-blue-900 to-indigo-900 flex\">\r\n        ${navbarHtml}\r\n        <div class=\"flex-1 ml-0 sm:ml-64 h-screen overflow-y-auto transition-all duration-300\">\r\n          <main class=\"p-4 md:p-8 max-w-7xl mx-auto animate-fadeIn\">\r\n            <div class=\"flex items-center justify-between mb-8 animate-slideDown\">\r\n              <h1 class=\"text-3xl font-bold text-white\">ðŸšš Delivery Management</h1>\r\n              <button id=\"createShipmentBtn\" class=\"px-4 py-2 rounded bg-gradient-to-r from-blue-600 to-indigo-600 text-white font-bold shadow-lg hover:scale-105 transition-all\">\r\n                Create Shipment\r\n              </button>\r\n            </div>\r\n            <div class=\"mb-6 flex gap-4\">\r\n              <select id=\"statusFilter\" class=\"input input-bordered max-w-xs py-2 px-4 rounded-lg focus:ring-2 focus:ring-blue-500 transition-all\">\r\n                <option value=\"\">All Status</option>\r\n                <option value=\"processing\">Processing</option>\r\n                <option value=\"approved\">Approved</option>\r\n                <option value=\"in-transit\">In-Transit</option>\r\n                <option value=\"delivered\">Delivered</option>\r\n                <option value=\"cancelled\">Cancelled</option>\r\n              </select>\r\n              <input type=\"text\" id=\"searchInput\" class=\"input input-bordered max-w-xs py-2 px-4 rounded-lg\" placeholder=\"Search by tracking code...\" />\r\n            </div>\r\n            <div class=\"overflow-x-auto\">\r\n              <table class=\"min-w-full bg-white/10 rounded-xl border border-white/20 text-white shadow-lg\">\r\n                <thead>\r\n                  <tr>\r\n                    <th class=\"px-4 py-2\">Tracking</th>\r\n                    <th class=\"px-4 py-2\">Receiver</th>\r\n                    <th class=\"px-4 py-2\">Status</th>\r\n                    <th class=\"px-4 py-2\">Location</th>\r\n                    <th class=\"px-4 py-2\">Cost</th>\r\n                    <th class=\"px-4 py-2\">Created</th>\r\n                    <th class=\"px-4 py-2\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody id=\"shipmentsTableBody\">\r\n                  ${shipmentsList.map(s => `\r\n                    <tr class=\"hover:bg-white/20 transition-all cursor-pointer\" data-shipment-id=\"${s.id}\">\r\n                      <td class=\"px-4 py-2 font-bold\">${s.tracking_code}</td>\r\n                      <td class=\"px-4 py-2\">${s.receiver_name}</td>\r\n                      <td class=\"px-4 py-2\">\r\n                        <span class=\"status-badge px-2 py-1 rounded-full text-xs font-medium\r\n                          ${s.status === \"delivered\" ? \"bg-green-500/20 text-green-400\" :\r\n                s.status === \"in-transit\" ? \"bg-blue-500/20 text-blue-400\" :\r\n                    s.status === \"processing\" ? \"bg-yellow-500/20 text-yellow-400\" :\r\n                        \"bg-red-500/20 text-red-400\"}\">\r\n                          ${s.status}\r\n                        </span>\r\n                      </td>\r\n                      <td class=\"px-4 py-2\">${s.destination}</td>\r\n                      <td class=\"px-4 py-2\">$${s.cost}</td>\r\n                      <td class=\"px-4 py-2\">${dayjs(s.created_at).format(\"MMM D, YYYY\")}</td>\r\n                      <td class=\"px-4 py-2 flex gap-2\">\r\n                        <button class=\"detailsShipmentBtn px-2 py-1 rounded bg-blue-600 text-white transition-all hover:bg-blue-700\" title=\"Details\">Details</button>\r\n                        <button class=\"editShipmentBtn px-2 py-1 rounded bg-yellow-600 text-white transition-all hover:bg-yellow-700\" title=\"Edit\">Edit</button>\r\n                        <button class=\"approveShipmentBtn px-2 py-1 rounded bg-green-600 text-white transition-all hover:bg-green-700\" title=\"Approve\">Approve</button>\r\n                        <button class=\"trackShipmentBtn px-2 py-1 rounded bg-purple-600 text-white transition-all hover:bg-purple-700\" title=\"Track\">Track</button>\r\n                      </td>\r\n                    </tr>\r\n                  `).join(\"\")}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div id=\"createShipmentModal\" class=\"fixed inset-0 bg-black/60 hidden items-center justify-center z-50 flex\">\r\n              <div class=\"bg-white rounded-xl p-8 w-full max-w-md shadow-lg relative animate-slideIn\">\r\n                <button id=\"closeModalBtn\" class=\"absolute top-4 right-4 text-gray-500 hover:text-red-500 text-xl\">Ã—</button>\r\n                <h2 class=\"text-2xl font-bold mb-4 text-gray-800\">Create Shipment</h2>\r\n                <form id=\"createShipmentForm\" class=\"space-y-4\">\r\n                  <input type=\"text\" name=\"sender_id\" placeholder=\"Sender User ID\" class=\"input input-bordered w-full py-2 px-4 rounded-lg\" required />\r\n                  <input type=\"text\" name=\"receiver_name\" placeholder=\"Receiver Name\" class=\"input input-bordered w-full py-2 px-4 rounded-lg\" required />\r\n                  <input type=\"text\" name=\"receiver_address\" placeholder=\"Receiver Address\" class=\"input input-bordered w-full py-2 px-4 rounded-lg\" required />\r\n                  <input type=\"tel\" name=\"receiver_phone\" placeholder=\"Receiver Phone\" class=\"input input-bordered w-full py-2 px-4 rounded-lg\" required />\r\n                  <input type=\"text\" name=\"origin\" placeholder=\"Origin\" class=\"input input-bordered w-full py-2 px-4 rounded-lg\" required />\r\n                  <input type=\"text\" name=\"destination\" placeholder=\"Destination\" class=\"input input-bordered w-full py-2 px-4 rounded-lg\" required />\r\n                  <input type=\"text\" name=\"package_description\" placeholder=\"Package Description\" class=\"input input-bordered w-full py-2 px-4 rounded-lg\" required />\r\n                  <input type=\"number\" name=\"weight\" placeholder=\"Weight (kg)\" class=\"input input-bordered w-full py-2 px-4 rounded-lg\" />\r\n                  <input type=\"number\" name=\"cost\" placeholder=\"Cost ($)\" class=\"input input-bordered w-full py-2 px-4 rounded-lg\" />\r\n                  <input type=\"text\" name=\"image_url\" placeholder=\"Image URL\" class=\"input input-bordered w-full py-2 px-4 rounded-lg\" />\r\n                  <button type=\"submit\" class=\"btn btn-primary w-full py-2 font-bold bg-gradient-to-r from-blue-600 to-indigo-600 text-white\">Create Shipment</button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n      <style>\r\n        #admin-sidebar { position: fixed; left: 0; top: 0; height: 100vh; }\r\n        @media (max-width: 640px) {\r\n          #admin-sidebar { width: 100vw; }\r\n          .sm\\\\:ml-64, .ml-64 { margin-left: 0 !important; }\r\n        }\r\n        .animate-slideIn { animation: slideIn 0.4s cubic-bezier(.4,0,.2,1); }\r\n        @keyframes slideIn {\r\n          from { transform: translateY(40px); opacity: 0; }\r\n          to { transform: translateY(0); opacity: 1; }\r\n        }\r\n      </style>\r\n    `;\r\n        document.querySelector(\"#app\").innerHTML = html;\r\n        mainEvents();\r\n    }\r\n\r\n    // --- Modals ---\r\n    async function renderEditShipmentModal(shipmentId) {\r\n        showSpinner();\r\n        const { shipment } = await fetchShipmentDetails(shipmentId);\r\n        hideSpinner();\r\n        const modalHtml = `\r\n      <div id=\"editShipmentModal\" class=\"fixed inset-0 bg-black/60 flex items-center justify-center z-50\">\r\n        <div class=\"bg-white rounded-xl p-8 w-full max-w-md shadow-lg relative animate-slideIn\">\r\n          <button id=\"closeEditModalBtn\" class=\"absolute top-4 right-4 text-gray-500 hover:text-red-500 text-xl\">Ã—</button>\r\n          <h2 class=\"text-2xl font-bold mb-4 text-gray-800\">Edit Shipment</h2>\r\n          <form id=\"editShipmentForm\" class=\"space-y-4\">\r\n            <input type=\"text\" name=\"receiver_name\" value=\"${shipment.receiver_name}\" placeholder=\"Receiver Name\" class=\"input input-bordered w-full py-2 px-4 rounded-lg\" required />\r\n            <input type=\"text\" name=\"receiver_address\" value=\"${shipment.receiver_address}\" placeholder=\"Receiver Address\" class=\"input input-bordered w-full py-2 px-4 rounded-lg\" required />\r\n            <input type=\"tel\" name=\"receiver_phone\" value=\"${shipment.receiver_phone}\" placeholder=\"Receiver Phone\" class=\"input input-bordered w-full py-2 px-4 rounded-lg\" required />\r\n            <input type=\"text\" name=\"origin\" value=\"${shipment.origin}\" placeholder=\"Origin\" class=\"input input-bordered w-full py-2 px-4 rounded-lg\" required />\r\n            <input type=\"text\" name=\"destination\" value=\"${shipment.destination}\" placeholder=\"Destination\" class=\"input input-bordered w-full py-2 px-4 rounded-lg\" required />\r\n            <input type=\"text\" name=\"package_description\" value=\"${shipment.package_description}\" placeholder=\"Package Description\" class=\"input input-bordered w-full py-2 px-4 rounded-lg\" required />\r\n            <input type=\"number\" name=\"weight\" value=\"${shipment.weight || \"\"}\" placeholder=\"Weight (kg)\" class=\"input input-bordered w-full py-2 px-4 rounded-lg\" />\r\n            <input type=\"number\" name=\"cost\" value=\"${shipment.cost || \"\"}\" placeholder=\"Cost ($)\" class=\"input input-bordered w-full py-2 px-4 rounded-lg\" />\r\n            <input type=\"text\" name=\"image_url\" value=\"${shipment.image_url || \"\"}\" placeholder=\"Image URL\" class=\"input input-bordered w-full py-2 px-4 rounded-lg\" />\r\n            <button type=\"submit\" class=\"btn btn-primary w-full py-2 font-bold bg-gradient-to-r from-yellow-500 to-yellow-700 text-white\">Update Shipment</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    `;\r\n        document.body.insertAdjacentHTML(\"beforeend\", modalHtml);\r\n\r\n        document.getElementById(\"closeEditModalBtn\")?.addEventListener(\"click\", () => {\r\n            document.getElementById(\"editShipmentModal\")?.remove();\r\n        });\r\n\r\n        document.getElementById(\"editShipmentForm\")?.addEventListener(\"submit\", async (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const success = await editShipment(form, shipmentId);\r\n            if (success) {\r\n                document.getElementById(\"editShipmentModal\")?.remove();\r\n                shipmentsList = await fetchShipments();\r\n                renderMain();\r\n            }\r\n        });\r\n    }\r\n\r\n    async function renderLiveTrackingModal(shipmentId) {\r\n        showSpinner();\r\n        const { shipment, updates } = await fetchShipmentDetails(shipmentId);\r\n        hideSpinner();\r\n        const modalHtml = `\r\n      <div id=\"liveTrackingModal\" class=\"fixed inset-0 bg-black/60 flex items-center justify-center z-50\">\r\n        <div class=\"bg-white rounded-xl p-8 w-full max-w-lg shadow-lg relative animate-slideIn\">\r\n          <button id=\"closeLiveTrackingModalBtn\" class=\"absolute top-4 right-4 text-gray-500 hover:text-red-500 text-xl\">Ã—</button>\r\n          <h2 class=\"text-2xl font-bold mb-4 text-gray-800\">Live Tracking - ${shipment.tracking_code}</h2>\r\n          <div id=\"liveMapContainer\" style=\"height: 300px;\" class=\"mb-4 rounded-lg overflow-hidden\"></div>\r\n          <form id=\"liveTrackingForm\" class=\"space-y-4\">\r\n            <input type=\"text\" name=\"location\" placeholder=\"Current Location (name or lat,lon)\" class=\"input input-bordered w-full py-2 px-4 rounded-lg\" required />\r\n            <select name=\"status\" class=\"input input-bordered w-full py-2 px-4 rounded-lg\" required>\r\n              <option value=\"processing\" ${shipment.status === \"processing\" ? \"selected\" : \"\"}>Processing</option>\r\n              <option value=\"in-transit\" ${shipment.status === \"in-transit\" ? \"selected\" : \"\"}>In-Transit</option>\r\n              <option value=\"delivered\" ${shipment.status === \"delivered\" ? \"selected\" : \"\"}>Delivered</option>\r\n              <option value=\"cancelled\" ${shipment.status === \"cancelled\" ? \"selected\" : \"\"}>Cancelled</option>\r\n            </select>\r\n            <input type=\"text\" name=\"note\" placeholder=\"Note (optional)\" class=\"input input-bordered w-full py-2 px-4 rounded-lg\" />\r\n            <button type=\"submit\" class=\"btn btn-primary w-full py-2 font-bold bg-gradient-to-r from-purple-600 to-purple-700 text-white\">Update Tracking</button>\r\n          </form>\r\n          <div class=\"mt-6\">\r\n            <h3 class=\"text-lg font-bold mb-2 text-gray-800\">Tracking History</h3>\r\n            <div class=\"tracking-history overflow-y-auto max-h-32\">\r\n              ${updates.length ? updates.map(u => `\r\n                <div class=\"p-2 rounded bg-gray-100 text-gray-800 flex justify-between items-center mb-1\">\r\n                  <span>${u.location}</span>\r\n                  <span class=\"text-blue-600\">${u.status}</span>\r\n                  <span class=\"text-xs text-gray-400\">${dayjs(u.updated_at).format(\"MMM D, HH:mm\")}</span>\r\n                </div>\r\n              `).join(\"\") : \"<div class='text-gray-400'>No updates.</div>\"}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n        document.body.insertAdjacentHTML(\"beforeend\", modalHtml);\r\n\r\n        // Render map after modal is in DOM\r\n        setTimeout(() => {\r\n            renderTrackingMap('liveMapContainer', updates);\r\n        }, 100);\r\n\r\n        document.getElementById(\"closeLiveTrackingModalBtn\")?.addEventListener(\"click\", () => {\r\n            document.getElementById(\"liveTrackingModal\")?.remove();\r\n        });\r\n\r\n        document.getElementById(\"liveTrackingForm\")?.addEventListener(\"submit\", async (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            let locationInput = form.location.value.trim();\r\n            let coords;\r\n            if (!locationInput.match(/^-?\\d+\\.\\d+,-?\\d+\\.\\d+$/)) {\r\n                // If not lat,lon, treat as place name\r\n                coords = await geocodeLocation(locationInput);\r\n                if (!coords) {\r\n                    toastr.error(\"Location not found!\");\r\n                    return;\r\n                }\r\n                locationInput = `${coords[0]},${coords[1]}`;\r\n            }\r\n            const status = form.status.value;\r\n            const note = form.note.value.trim();\r\n            await addLiveTrackingUpdate(shipmentId, locationInput, status, note);\r\n            document.getElementById(\"liveTrackingModal\")?.remove();\r\n            shipmentsList = await fetchShipments();\r\n            renderMain();\r\n        });\r\n    }\r\n\r\n    async function renderShipmentDetails(shipmentId) {\r\n        showSpinner();\r\n        const { shipment, updates } = await fetchShipmentDetails(shipmentId);\r\n        hideSpinner();\r\n        const html = `\r\n      <div class=\"min-h-screen bg-gradient-to-br from-gray-900 via-blue-900 to-indigo-900 flex\">\r\n        ${navbarHtml}\r\n        <div class=\"flex-1 ml-0 sm:ml-64 h-screen overflow-y-auto transition-all duration-300\">\r\n          <main class=\"p-4 md:p-8 max-w-5xl mx-auto animate-fadeIn\">\r\n            <button id=\"backToShipments\" class=\"mb-6 px-4 py-2 rounded bg-gradient-to-r from-blue-600 to-indigo-600 text-white font-bold shadow hover:scale-105 transition-all\">\r\n              Back to Shipments\r\n            </button>\r\n            <div class=\"flex items-center gap-6 mb-8\">\r\n              <img src=\"${shipment.image_url || \"/src/images/package-icon.png\"}\" class=\"w-20 h-20 rounded-full border-4 border-blue-500 bg-white\" alt=\"Package\" />\r\n              <div>\r\n                <h2 class=\"text-2xl font-bold text-white\">${shipment.receiver_name}</h2>\r\n                <p class=\"text-blue-300\">Tracking: ${shipment.tracking_code}</p>\r\n                <p class=\"text-gray-400\">Status: ${shipment.status}</p>\r\n                <span class=\"ml-2 text-xs text-gray-400\">Created: ${dayjs(shipment.created_at).format(\"MMM D, YYYY\")}</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-8\">\r\n              <h3 class=\"text-lg font-bold text-white mb-4\">Tracking Updates</h3>\r\n              <div class=\"space-y-2\">\r\n                ${updates.length ? updates.map(u => `\r\n                  <div class=\"p-3 rounded bg-white/5 text-white flex justify-between items-center\">\r\n                    <span>${u.location}</span>\r\n                    <span class=\"text-blue-400\">${u.status}</span>\r\n                    <span class=\"text-xs text-gray-400\">${dayjs(u.updated_at).format(\"MMM D, HH:mm\")}</span>\r\n                  </div>\r\n                `).join(\"\") : \"<div class='text-gray-400'>No updates.</div>\"}\r\n              </div>\r\n            </div>\r\n            <div id=\"detailsMapContainer\" style=\"height: 300px;\" class=\"mb-8 rounded-lg overflow-hidden\"></div>\r\n            <div class=\"flex gap-2\">\r\n              <button id=\"editShipmentBtnDetails\" class=\"px-4 py-2 rounded bg-yellow-600 text-white font-bold shadow hover:bg-yellow-700 transition-all\">\r\n                Edit Shipment\r\n              </button>\r\n              <button id=\"trackLiveBtnDetails\" class=\"px-4 py-2 rounded bg-purple-600 text-white font-bold shadow hover:bg-purple-700 transition-all\">\r\n                Live Tracking\r\n              </button>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    `;\r\n        document.querySelector(\"#app\").innerHTML = html;\r\n        setTimeout(() => {\r\n            renderTrackingMap('detailsMapContainer', updates);\r\n        }, 100);\r\n\r\n        document.getElementById(\"backToShipments\")?.addEventListener(\"click\", () => {\r\n            renderMain();\r\n        });\r\n        document.getElementById(\"editShipmentBtnDetails\")?.addEventListener(\"click\", () => {\r\n            renderEditShipmentModal(shipmentId);\r\n        });\r\n        document.getElementById(\"trackLiveBtnDetails\")?.addEventListener(\"click\", () => {\r\n            renderLiveTrackingModal(shipmentId);\r\n        });\r\n    }\r\n\r\n    function mainEvents() {\r\n        navbarEvents();\r\n\r\n        document.getElementById(\"statusFilter\")?.addEventListener(\"change\", async (e) => {\r\n            const status = e.target.value;\r\n            shipmentsList = await fetchShipments(status);\r\n            renderMain();\r\n        });\r\n\r\n        document.getElementById(\"searchInput\")?.addEventListener(\"input\", async (e) => {\r\n            const search = e.target.value.trim().toUpperCase();\r\n            if (!search) {\r\n                shipmentsList = await fetchShipments();\r\n            } else {\r\n                shipmentsList = shipmentsList.filter(s => (s.tracking_code || \"\").toUpperCase().includes(search));\r\n            }\r\n            renderMain();\r\n        });\r\n\r\n        document.querySelectorAll(\"#shipmentsTableBody tr\").forEach(row => {\r\n            const shipmentId = row.getAttribute(\"data-shipment-id\");\r\n            row.querySelector(\".detailsShipmentBtn\")?.addEventListener(\"click\", (e) => {\r\n                e.stopPropagation();\r\n                renderShipmentDetails(shipmentId);\r\n            });\r\n            row.querySelector(\".editShipmentBtn\")?.addEventListener(\"click\", (e) => {\r\n                e.stopPropagation();\r\n                renderEditShipmentModal(shipmentId);\r\n            });\r\n            row.querySelector(\".approveShipmentBtn\")?.addEventListener(\"click\", async (e) => {\r\n                e.stopPropagation();\r\n                await addLiveTrackingUpdate(shipmentId, `${WAREHOUSE_LOCATION[0]},${WAREHOUSE_LOCATION[1]}`, \"approved\", \"Approved by admin\");\r\n                shipmentsList = await fetchShipments();\r\n                renderMain();\r\n            });\r\n            row.querySelector(\".trackShipmentBtn\")?.addEventListener(\"click\", (e) => {\r\n                e.stopPropagation();\r\n                renderLiveTrackingModal(shipmentId);\r\n            });\r\n        });\r\n\r\n        // Modal logic\r\n        const modal = document.getElementById(\"createShipmentModal\");\r\n        document.getElementById(\"createShipmentBtn\")?.addEventListener(\"click\", () => {\r\n            modal.classList.remove(\"hidden\");\r\n        });\r\n        document.getElementById(\"closeModalBtn\")?.addEventListener(\"click\", () => {\r\n            modal.classList.add(\"hidden\");\r\n        });\r\n\r\n        document.getElementById(\"createShipmentForm\")?.addEventListener(\"submit\", async (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const success = await createShipment(form);\r\n            if (success) {\r\n                modal.classList.add(\"hidden\");\r\n                shipmentsList = await fetchShipments();\r\n                renderMain();\r\n            }\r\n        });\r\n    }\r\n\r\n    renderMain();\r\n    return ({ html: \"\", pageEvents: () => renderMain() })\r\n};\r\n\r\nexport default shipments;"],"names":["geocodeLocation","locationName","url","results","showSpinner","spinner","hideSpinner","fetchShipments","status","query","supabase","data","error","toastr","fetchShipmentDetails","id","shipment","updates","createShipment","form","trackingCode","editShipment","shipmentId","updateData","addLiveTrackingUpdate","location","note","WAREHOUSE_LOCATION","parseLatLon","b","renderTrackingMap","containerId","points","u","lat","lon","center","centerWebMercator","transform","map","Map","TileLayer","OSM","View","lineCoords","line","Feature","LineString","Style","Stroke","vectorSource","VectorSource","vectorLayer","VectorLayer","pt","idx","marker","Point","Icon","extent","transformExtent","shipments","reset","navbarHtml","navbarEvents","Navbar","shipmentsList","renderMain","html","s","dayjs","mainEvents","renderEditShipmentModal","modalHtml","e","renderLiveTrackingModal","locationInput","coords","renderShipmentDetails","search","row","modal"],"mappings":"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"}