{"version":3,"file":"prepare-B3CCWasI.js","sources":["../../src/script/views/User/function/prepareHandler.js","../../src/script/views/User/prepare.js"],"sourcesContent":["import { supabase } from \"../../../utils/supabaseClient\";\r\nimport toastr from \"../../../utils/toastr\";\r\nimport dayjs from \"dayjs\";\r\nimport { sendEmail } from \"../../../utils/send-email\";\r\n\r\n/**\r\n * Calculates the delivery cost in USD.\r\n * Considers duration, urgency, weight, quantity, and distance.\r\n */\r\nexport async function calculateCost(data) {\r\n  let base = 20;\r\n  let weightCost = data.weight ? Math.ceil(Number(data.weight)) * 5 : 0;\r\n  let quantityCost = data.quantity ? Number(data.quantity) * 2 : 0;\r\n  let urgencyCost = 0;\r\n  let distanceCost = 0;\r\n\r\n  // Duration logic\r\n  let durationHours = 72; // default 3 days\r\n  if (data.delivery_duration && data.delivery_duration !== \"custom\") {\r\n    durationHours = Number(data.delivery_duration);\r\n  } else if (data.delivery_duration === \"custom\" && data.custom_duration) {\r\n    durationHours = Number(data.custom_duration);\r\n  }\r\n\r\n  // Urgency: if duration < 24h, add 30%\r\n  if (durationHours < 24) {\r\n    urgencyCost = 0.3 * (base + weightCost + quantityCost);\r\n  }\r\n\r\n  // TODO: Use Google Directions API for real distance\r\n  if (data.delivery_address && data.origin_address) {\r\n    distanceCost = 4500 * 0.05; // $0.05/km (demo value)\r\n  }\r\n\r\n  let total = base + weightCost + quantityCost + distanceCost + urgencyCost;\r\n  return Math.round(total * 100) / 100;\r\n}\r\n\r\n/**\r\n * Uploads an image to Supabase Storage (to deliveries/public/images/).\r\n * Requires RLS policy to allow public insert to deliveries/public/images/*\r\n */\r\nexport async function uploadImage(file) {\r\n  if (!file) return \"\";\r\n  const fileName = `public/images/${Date.now()}_${file.name}`;\r\n  const { data: imgData, error: imgError } = await supabase.storage\r\n    .from(\"deliveries\")\r\n    .upload(fileName, file, {\r\n      cacheControl: \"3600\",\r\n      upsert: false,\r\n    });\r\n  if (imgError) {\r\n    toastr.error(\"Image upload failed: \" + imgError.message);\r\n    return \"\";\r\n  }\r\n  // Public URL for the uploaded image\r\n  return supabase.storage.from(\"deliveries\").getPublicUrl(fileName).publicUrl;\r\n}\r\n\r\n/**\r\n * Submits a delivery request and sends a receipt email.\r\n * Returns { success, trackingId }\r\n */\r\nexport async function submitDelivery(data, imageUrl, userId, cost) {\r\n  // Generate tracking code\r\n  const trackingCode = \"TRK\" + Date.now();\r\n\r\n  // Insert shipment\r\n  const { data: shipmentData, error: shipmentError } = await supabase.from(\"shipments\").insert([{\r\n    sender_id: userId,\r\n    receiver_name: data.receiver_name,\r\n    receiver_address: data.delivery_address,\r\n    receiver_phone: data.receiver_phone,\r\n    origin: data.origin_address,\r\n    destination: data.delivery_address,\r\n    package_description: data.instructions,\r\n    weight: Number(data.weight) || null,\r\n    cost: Number(cost),\r\n    status: \"processing\",\r\n    tracking_code: trackingCode,\r\n    image_url: imageUrl,\r\n  }]).select();\r\n\r\n  if (shipmentError) {\r\n    toastr.error(\"Failed to create delivery request: \" + shipmentError.message);\r\n    return { success: false, trackingId: null };\r\n  }\r\n\r\n  // Insert notification\r\n  await supabase.from(\"notifications\").insert([{\r\n    user_id: userId,\r\n    title: \"Delivery Quota Requested\",\r\n    message: `Your delivery request for ${data.delivery_address} is pending approval.`,\r\n  }]);\r\n\r\n  // Generate receipt HTML\r\n  const receiptHtml = `\r\n    <h2>SwiftEdge Logistics Delivery Receipt</h2>\r\n    <p><strong>Tracking Code:</strong> ${trackingCode}</p>\r\n    <p><strong>Sender Name:</strong> ${data.sender_name}</p>\r\n    <p><strong>Sender Email:</strong> ${data.sender_email}</p>\r\n    <p><strong>Sender Phone:</strong> ${data.sender_phone}</p>\r\n    <p><strong>Pickup Address:</strong> ${data.origin_address}</p>\r\n    <hr>\r\n    <p><strong>Receiver Name:</strong> ${data.receiver_name}</p>\r\n    <p><strong>Receiver Phone:</strong> ${data.receiver_phone}</p>\r\n    <p><strong>Receiver Email:</strong> ${data.receiver_email}</p>\r\n    <p><strong>Country:</strong> ${data.country}</p>\r\n    <p><strong>State:</strong> ${data.state}</p>\r\n    <p><strong>Region:</strong> ${data.region}</p>\r\n    <p><strong>City/Town:</strong> ${data.city}</p>\r\n    <p><strong>Address:</strong> ${data.delivery_address}</p>\r\n    <p><strong>Zipcode:</strong> ${data.zipcode}</p>\r\n    <hr>\r\n    <p><strong>Delivery Date/Time:</strong> ${dayjs(data.delivery_datetime).format(\"MMM D, YYYY HH:mm\")}</p>\r\n    <p><strong>Duration:</strong> ${data.delivery_duration === \"custom\" ? data.custom_duration + \" hours\" : data.delivery_duration + \" hours\"}</p>\r\n    <p><strong>Item Category:</strong> ${data.item_category}</p>\r\n    <p><strong>Quantity:</strong> ${data.quantity}</p>\r\n    <p><strong>Weight:</strong> ${data.weight} kg</p>\r\n    <p><strong>Instructions:</strong> ${data.instructions}</p>\r\n    <p><strong>Cost:</strong> $${cost}</p>\r\n    ${imageUrl ? `<img src=\"${imageUrl}\" alt=\"Item Image\" style=\"max-width:200px;border-radius:8px;margin-top:10px;\">` : \"\"}\r\n    <p>Thank you for choosing SwiftEdge Logistics!</p>\r\n  `;\r\n\r\n  // Send receipt email to sender and receiver\r\n  try {\r\n    await sendEmail({\r\n      to: [data.sender_email, data.receiver_email],\r\n      subject: \"Your SwiftEdge Delivery Receipt\",\r\n      html: receiptHtml,\r\n    });\r\n    toastr.success(\"Receipt sent to your email!\");\r\n  } catch (err) {\r\n    toastr.error(\"Failed to send receipt email.\");\r\n  }\r\n\r\n  return { success: true, trackingId: trackingCode };\r\n}","import Navbar from \"./components/navbar\";\r\nimport { reset } from \"../../utils/reset\";\r\nimport { GlobeSpinner } from \"../../components/GlobeSpinner\";\r\nimport { calculateCost, uploadImage, submitDelivery } from \"./function/prepareHandler\";\r\nimport dayjs from \"dayjs\";\r\nimport { supabase } from \"../../utils/supabaseClient\";\r\nimport toastr from \"../../utils/toastr\";\r\nimport { checkSession } from \"./function/checkSession\";\r\n\r\nconst heroBg = \"https://www.wowtheme7.com/tf/transpro/assets/version-2/img/slide-v3/item-03.png\";\r\nconst illustrationImg = \"https://www.dhl.com/content/experience-fragments/dhl/en/dgf/top_product_teaser/image_right_3_rows/dgf_aspa_euro_dgf_homepage_products_and_solutions/_jcr_content/root/container_copy/container_copy/image.coreimg.80.1197.jpeg/1655732496462/shipping-methods-graphic-0001.jpeg\";\r\n\r\nfunction preparePageInputsForDarkTheme() {\r\n    function applyInputStyles() {\r\n        const isDark = document.documentElement.classList.contains('dark') ||\r\n            document.body.classList.contains('dark');\r\n        if (isDark) {\r\n            document.querySelectorAll('input, textarea, select').forEach(el => {\r\n                el.classList.add('dark:text-white');\r\n            });\r\n        }\r\n    }\r\n    if (document.readyState === 'loading') {\r\n        document.addEventListener('DOMContentLoaded', applyInputStyles);\r\n    } else {\r\n        applyInputStyles();\r\n    }\r\n}\r\n\r\nconst prepare = async () => {\r\n\r\n    if (!(await checkSession())) return;\r\n    const { html: navbarHtml, pageEvents: navbarEvents } = Navbar(\"prepare\");\r\n\r\n    const html = /* html */`\r\n    <div class=\"min-h-screen bg-[#1e293b] dark:bg-background-dark transition-colors duration-300 bg-cover bg-center\"\r\n      style=\"background-image: url('${heroBg}'); background-blend-mode: multiply;\">\r\n      ${navbarHtml}\r\n      <main id=\"prepare-main\" class=\"container mx-auto px-4 py-8 max-w-4xl\">\r\n        <section class=\"relative w-full h-56 md:h-72 flex items-center justify-center overflow-hidden rounded-2xl shadow-lg mb-8\"\r\n          style=\"background: url('${heroBg}') center/cover no-repeat, #1e293b;\">\r\n          <div class=\"absolute inset-0 bg-gradient-to-b from-black/60 to-background-dark/90\"></div>\r\n          <div class=\"relative z-10 flex flex-col items-center justify-center w-full h-full\">\r\n            <img src=\"${illustrationImg}\" alt=\"Delivery Illustration\" class=\"h-24 w-auto mb-2 rounded-lg shadow-lg\" />\r\n            <h1 class=\"text-4xl md:text-5xl font-extrabold text-white drop-shadow-lg mb-2\">Prepare Your Delivery</h1>\r\n            <p class=\"text-lg text-accent mt-2 font-semibold\">Get a quote, schedule, and track your package</p>\r\n          </div>\r\n        </section>\r\n        <form id=\"prepare-form\" class=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-8 space-y-6\">\r\n          <h2 class=\"text-2xl font-bold text-primary dark:text-accent mb-4 text-center\">Sender Information</h2>\r\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div>\r\n              <label class=\"block font-semibold mb-1\">Your Name/Company</label>\r\n              <input type=\"text\" name=\"sender_name\" class=\"w-full p-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700\" required />\r\n            </div>\r\n            <div>\r\n              <label class=\"block font-semibold mb-1\">Your Email</label>\r\n              <input type=\"email\" name=\"sender_email\" class=\"w-full p-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700\" required />\r\n            </div>\r\n            <div>\r\n              <label class=\"block font-semibold mb-1\">Your Phone</label>\r\n              <input type=\"tel\" name=\"sender_phone\" class=\"w-full p-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700\" required />\r\n            </div>\r\n            <div>\r\n              <label class=\"block font-semibold mb-1\">Pickup Address</label>\r\n              <input type=\"text\" name=\"origin_address\" id=\"origin-address\" class=\"w-full p-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700\" required />\r\n            </div>\r\n          </div>\r\n          <h2 class=\"text-2xl font-bold text-primary dark:text-accent mb-4 text-center\">Receiver Information</h2>\r\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div>\r\n              <label class=\"block font-semibold mb-1\">Receiver Name/Company</label>\r\n              <input type=\"text\" name=\"receiver_name\" class=\"w-full p-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700\" required />\r\n            </div>\r\n            <div>\r\n              <label class=\"block font-semibold mb-1\">Receiver Phone</label>\r\n              <input type=\"tel\" name=\"receiver_phone\" class=\"w-full p-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700\" required />\r\n            </div>\r\n            <div>\r\n              <label class=\"block font-semibold mb-1\">Receiver Email</label>\r\n              <input type=\"email\" name=\"receiver_email\" class=\"w-full p-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700\" required />\r\n            </div>\r\n            <div>\r\n              <label class=\"block font-semibold mb-1\">Country</label>\r\n              <input type=\"text\" name=\"country\" class=\"w-full p-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700\" required />\r\n            </div>\r\n            <div>\r\n              <label class=\"block font-semibold mb-1\">State</label>\r\n              <input type=\"text\" name=\"state\" class=\"w-full p-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700\" required />\r\n            </div>\r\n            <div>\r\n              <label class=\"block font-semibold mb-1\">Region</label>\r\n              <input type=\"text\" name=\"region\" class=\"w-full p-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700\" />\r\n            </div>\r\n            <div>\r\n              <label class=\"block font-semibold mb-1\">City/Town</label>\r\n              <input type=\"text\" name=\"city\" class=\"w-full p-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700\" required />\r\n            </div>\r\n            <div>\r\n              <label class=\"block font-semibold mb-1\">Address</label>\r\n              <input type=\"text\" name=\"delivery_address\" id=\"delivery-address\" class=\"w-full p-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700\" required />\r\n            </div>\r\n            <div>\r\n              <label class=\"block font-semibold mb-1\">Zipcode</label>\r\n              <input type=\"text\" name=\"zipcode\" class=\"w-full p-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700\" required />\r\n            </div>\r\n          </div>\r\n          <h2 class=\"text-2xl font-bold text-primary dark:text-accent mb-4 text-center\">Delivery Details</h2>\r\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div>\r\n              <label class=\"block font-semibold mb-1\">Delivery Date/Time Preference</label>\r\n              <input type=\"datetime-local\" name=\"delivery_datetime\" class=\"w-full p-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700\" required />\r\n            </div>\r\n            <div>\r\n              <label class=\"block font-semibold mb-1\">Delivery Duration</label>\r\n              <select name=\"delivery_duration\" class=\"w-full p-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700\">\r\n                <option value=\"24\">24 Hours</option>\r\n                <option value=\"72\">3 Days</option>\r\n                <option value=\"720\">1 Month</option>\r\n                <option value=\"2160\">3 Months</option>\r\n                <option value=\"custom\">Custom (hours)</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label class=\"block font-semibold mb-1\">Item Type/Category</label>\r\n              <select name=\"item_category\" class=\"w-full p-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700\">\r\n                <option value=\"electronics\">Electronics</option>\r\n                <option value=\"documents\">Documents</option>\r\n                <option value=\"clothing\">Clothing</option>\r\n                <option value=\"food\">Food</option>\r\n                <option value=\"other\">Other</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label class=\"block font-semibold mb-1\">Quantity</label>\r\n              <input type=\"number\" name=\"quantity\" min=\"1\" class=\"w-full p-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700\" required />\r\n            </div>\r\n            <div>\r\n              <label class=\"block font-semibold mb-1\">Weight (kg)</label>\r\n              <input type=\"number\" name=\"weight\" min=\"0.1\" step=\"0.1\" class=\"w-full p-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700\" />\r\n            </div>\r\n            <div class=\"md:col-span-2\">\r\n              <label class=\"block font-semibold mb-1\">Delivery Instructions</label>\r\n              <textarea name=\"instructions\" rows=\"2\" class=\"w-full p-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700\"></textarea>\r\n            </div>\r\n            <div class=\"md:col-span-2\">\r\n              <label class=\"block font-semibold mb-1\">Upload Item Image</label>\r\n              <input type=\"file\" name=\"item_image\" accept=\"image/*\" class=\"w-full p-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700\" />\r\n            </div>\r\n          </div>\r\n          <div id=\"pricing-box\" class=\"bg-peach dark:bg-background-dark rounded-lg p-4 mt-6 text-center text-lg font-bold text-primary dark:text-accent shadow-inner\"></div>\r\n          <button type=\"submit\" class=\"w-full py-4 mt-4 bg-primary text-white font-bold rounded-lg shadow-md hover:bg-accent transition-all duration-300 flex items-center justify-center gap-2\">\r\n            <span id=\"spinner\" class=\"hidden\">${GlobeSpinner({ size: 24 })}</span>\r\n            <span id=\"submit-text\">Submit Delivery Request</span>\r\n          </button>\r\n        </form>\r\n        <div id=\"prepare-modal\" class=\"fixed inset-0 flex items-center justify-center z-[99999] bg-black bg-opacity-50 hidden\">\r\n          <div class=\"bg-white dark:bg-background-dark p-6 rounded-lg shadow-xl max-w-md w-full relative\">\r\n            <button id=\"close-modal-btn\" class=\"absolute top-2 right-2 text-xl text-text-subtle hover:text-accent\">&times;</button>\r\n            <h3 class=\"text-xl font-bold mb-2\">Confirm Delivery Request</h3>\r\n            <form id=\"confirm-form\" class=\"space-y-4\">\r\n              <input type=\"email\" name=\"email\" placeholder=\"Email\" required class=\"w-full p-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700\" />\r\n              <input type=\"password\" name=\"password\" placeholder=\"Password\" required class=\"w-full p-3 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700\" />\r\n              <button type=\"submit\" class=\"w-full py-3 bg-accent text-primary font-bold rounded-lg shadow-md hover:bg-accent-soft transition-all duration-300\">Confirm</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div id=\"tracking-modal\" class=\"fixed inset-0 flex items-center justify-center z-[99999] bg-black bg-opacity-50 hidden\">\r\n          <div class=\"bg-white dark:bg-background-dark p-6 rounded-lg shadow-xl max-w-md w-full relative\">\r\n            <button id=\"close-tracking-modal-btn\" class=\"absolute top-2 right-2 text-xl text-text-subtle hover:text-accent\">&times;</button>\r\n            <h3 class=\"text-xl font-bold mb-2\">Your Tracking ID</h3>\r\n            <div id=\"tracking-id-box\" class=\"text-lg font-mono bg-gray-100 dark:bg-gray-800 p-4 rounded-lg mb-4\"></div>\r\n            <button id=\"copy-tracking-btn\" class=\"w-full py-3 bg-primary text-white font-bold rounded-lg shadow-md hover:bg-accent transition-all duration-300\">Copy Tracking ID</button>\r\n          </div>\r\n        </div>\r\n      </main>\r\n      <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css\">\r\n      <script src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places\"></script>\r\n    </div>\r\n  `;\r\n\r\n    function pageEvents(onNavigate = () => { }) {\r\n        navbarEvents(onNavigate);\r\n        reset(\"Prepare Delivery\");\r\n        preparePageInputsForDarkTheme();\r\n\r\n        // Google Places Autocomplete for both addresses\r\n        if (window.google && window.google.maps) {\r\n            const input1 = document.getElementById('delivery-address');\r\n            const input2 = document.getElementById('origin-address');\r\n            if (input1) {\r\n                new window.google.maps.places.Autocomplete(input1, {\r\n                    types: ['geocode'],\r\n                    componentRestrictions: { country: 'us' }\r\n                });\r\n            }\r\n            if (input2) {\r\n                new window.google.maps.places.Autocomplete(input2, {\r\n                    types: ['geocode'],\r\n                    componentRestrictions: { country: 'us' }\r\n                });\r\n            }\r\n        } else {\r\n            window.initGoogleAutocomplete = () => {\r\n                const input1 = document.getElementById('delivery-address');\r\n                const input2 = document.getElementById('origin-address');\r\n                if (input1 && window.google && window.google.maps) {\r\n                    new window.google.maps.places.Autocomplete(input1, {\r\n                        types: ['geocode'],\r\n                        componentRestrictions: { country: 'us' }\r\n                    });\r\n                }\r\n                if (input2 && window.google && window.google.maps) {\r\n                    new window.google.maps.places.Autocomplete(input2, {\r\n                        types: ['geocode'],\r\n                        componentRestrictions: { country: 'us' }\r\n                    });\r\n                }\r\n            };\r\n            window.addEventListener('load', window.initGoogleAutocomplete);\r\n        }\r\n\r\n        const pricingBox = document.getElementById(\"pricing-box\");\r\n        const form = document.getElementById(\"prepare-form\");\r\n        const spinner = document.getElementById(\"spinner\");\r\n        const submitText = document.getElementById(\"submit-text\");\r\n\r\n        form.addEventListener(\"input\", async () => {\r\n            const data = Object.fromEntries(new FormData(form));\r\n            const cost = await calculateCost(data);\r\n            pricingBox.innerHTML = `Estimated Delivery Cost: <span class=\"text-accent font-extrabold\">$${cost.toLocaleString()}</span>`;\r\n        });\r\n\r\n        form.addEventListener(\"submit\", async (e) => {\r\n            e.preventDefault();\r\n            spinner.classList.remove(\"hidden\");\r\n            submitText.classList.add(\"opacity-50\");\r\n            const data = Object.fromEntries(new FormData(form));\r\n            const cost = await calculateCost(data);\r\n\r\n            // Upload image to Supabase Storage\r\n            let imageUrl = \"\";\r\n            const imageFile = form.item_image.files[0];\r\n            if (imageFile) {\r\n                imageUrl = await uploadImage(imageFile);\r\n            }\r\n\r\n            // Show modal for email/password confirmation\r\n            document.getElementById(\"prepare-modal\").classList.remove(\"hidden\");\r\n            spinner.classList.add(\"hidden\");\r\n            submitText.classList.remove(\"opacity-50\");\r\n\r\n            document.getElementById(\"confirm-form\").onsubmit = async (ev) => {\r\n                ev.preventDefault();\r\n                const email = ev.target.email.value;\r\n                const password = ev.target.password.value;\r\n                const { data: loginData, error: loginError } = await supabase.auth.signInWithPassword({ email, password });\r\n                if (loginError) {\r\n                    toastr.error(\"Authentication failed\");\r\n                    return;\r\n                }\r\n                // Generate OTP and send email (pseudo)\r\n                const otp = Math.floor(100000 + Math.random() * 900000);\r\n                await supabase.from(\"otps\").insert({\r\n                    user_id: loginData.user.id,\r\n                    code: otp.toString(),\r\n                    type: \"transaction\",\r\n                    expires_at: dayjs().add(10, \"minute\").toISOString(),\r\n                });\r\n                toastr.success(\"Reciept sent to your email!\");\r\n\r\n                // Submit delivery\r\n                const { success, trackingId } = await submitDelivery(data, imageUrl, loginData.user.id, cost);\r\n                if (!success) {\r\n                    toastr.error(\"Failed to create delivery request\");\r\n                } else {\r\n                    toastr.success(\"Delivery request submitted!\");\r\n                    document.getElementById(\"prepare-modal\").classList.add(\"hidden\");\r\n                    form.reset();\r\n                    pricingBox.innerHTML = \"\";\r\n                    // Show tracking modal\r\n                    document.getElementById(\"tracking-modal\").classList.remove(\"hidden\");\r\n                    document.getElementById(\"tracking-id-box\").textContent = trackingId;\r\n                }\r\n            };\r\n\r\n            document.getElementById(\"close-modal-btn\").onclick = () => {\r\n                document.getElementById(\"prepare-modal\").classList.add(\"hidden\");\r\n            };\r\n        });\r\n\r\n        // Tracking modal events\r\n        document.getElementById(\"close-tracking-modal-btn\").onclick = () => {\r\n            document.getElementById(\"tracking-modal\").classList.add(\"hidden\");\r\n        };\r\n        document.getElementById(\"copy-tracking-btn\").onclick = () => {\r\n            const trackingId = document.getElementById(\"tracking-id-box\").textContent;\r\n            navigator.clipboard.writeText(trackingId);\r\n            toastr.success(\"Tracking ID copied!\");\r\n        };\r\n    }\r\n\r\n    return { html, pageEvents };\r\n};\r\n\r\nexport default prepare;"],"names":["calculateCost","data","base","weightCost","quantityCost","urgencyCost","distanceCost","durationHours","total","uploadImage","file","fileName","imgData","imgError","supabase","toastr","submitDelivery","imageUrl","userId","cost","trackingCode","shipmentData","shipmentError","receiptHtml","dayjs","sendEmail","heroBg","illustrationImg","preparePageInputsForDarkTheme","applyInputStyles","el","prepare","checkSession","navbarHtml","navbarEvents","Navbar","html","GlobeSpinner","pageEvents","onNavigate","reset","input1","input2","pricingBox","form","spinner","submitText","e","imageFile","ev","email","password","loginData","loginError","otp","success","trackingId"],"mappings":"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"}